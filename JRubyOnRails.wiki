[[Home|&raquo; JRuby Project Wiki Home Page]]
<h1>JRuby on Rails</h1>
You can use JRuby with [http://www.rubyonrails.org/ Ruby on Rails]. JRuby gives Rails the power and functionality of the Java Platform,  providing it with:
* Excellent garbage collection for endless uptimes
* Hotspot profiled dynamic optimizations for great performance
* Access to the Java ecosphere for additional technology options
* Deployment to Java application servers for ubiquity


__TOC__
===Getting Started===
Get started with these tutorials:

*[http://blog.emptyway.com/2008/04/08/120-seconds-guide-to-jruby-on-rails| 120-second guide to JRuby on Rails]
*[http://thenice.tumblr.com/post/133345213/deploying-a-rails-application-in-tomcat-with-jruby-a| Deploying a Rails application in Tomcat with JRuby: A concise tutorial]

=== Deployment ===

==== War File Deployment ====
If you don't use a traditional Ruby application server like [http://mongrel.rubyforge.org/ Mongrel], you can use a Java application server.  To deploy to a Java app server, you can use the tool <a href="{{project warbler page Home}}">Warbler</a> to bundle your Rails application in a Java Web Application Archive (<tt>.war</tt> file). (Warbler is a minimal, flexible, Ruby-like way to create a <tt>.war</tt> file.) Once you have a <tt>.war</tt> file, you can deploy to any Java app server using its war deployment mechanism.  

'''Some links to information on various Java appllication servers:'''
* [http://atalks.prokhorenko.us/2009/02/ruby-on-rails-application-migrating.html Tomcat]
* [[JRuby on Rails on Jetty|Jetty]]
* [[JRuby on Rails on WebSphere|WebSphere]]
* [http://wiki.oracle.com/page/JRuby+on+Rails%3A+Deploying+to+Oracle+Containers+for+Java+EE+%28OC4J%29 Oracle OC4J]
* [[JRuby on Rails on BEA Weblogic|Oracle WebLogic]]
* [http://oddthesis.org/theses/jboss-rails JBoss]

==== Glassfish v3 Deployment ====
The Glassfish gem by Vivek Pandey enables you to easily deploy a JRuby on Rails application to the Glassfish v3 modularized Java application server. The Glassfish gem wraps the essential technologies in 3 MB and allows you to run your application using a traditional approach, as if you were running Mongrel, Rack, and so on. A brief tutorial can be found here:<br/> [[JRuby on Rails with Glassfish Gem]].

See also:
* [[JRuby on Rails in GlassFish|JRuby on Rails in Glassfish]]


==== Traditional Rails Deployment ====

* [http://glassfishgem.rubyforge.org/ Glassfish Gem on Rubyforge]
* [http://weblogs.java.net/blog/vivekp/archive/2009/03/new_features_in.html New features in GlassFish 0.9.3 gem]
* [http://mongrel.rubyforge.org/ Mongrel web site]
* [http://en.wikipedia.org/wiki/Mongrel_(web_server) Mongrel Web Server entry on Wikipedia]
* [http://swiftiply.swiftcore.org/mongrel.html Swiftiply with Mongrel]
* [http://www.webrick.org/ WEBrick website]
* [http://en.wikipedia.org/wiki/WEBrick WEBrick entry on Wikipedia]
* [http://microjet.ath.cx/WebWiki/WEBrick.html Gnome's Guide to WEBrick]
* [http://modrails.com Passenger]

=== Miscellaneous Rails Topics ===
* '''''[[Rails_2_3_2|Important note about Rails 2.3.2]]'''''
* [http://blarg.slackworks.com/posts/jndi-with-rails Blog entry on setting up JNDI]
* [[RailsJSR286Portlets|Write Portlets using Rails]]
* [http://blarg.slackworks.com/posts/jruby-service-in-rails JRuby Services in Rails]
* [[Running Rails with Firebird]]
* [[Rails AOT|Compiling Rails' controllers and models AOT]]
* [[Rails Eclipse Jetty Maven|Rails on Eclipse + Run Jetty Run + Maven]]
* [http://kofno.wordpress.com/2008/04/23/writing-an-activerecord-jdbc-adapter/ Writing an ActiveRecord-JDBC adapte